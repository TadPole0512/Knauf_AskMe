
/* ***************************************************************************************************************************************** */
/* *********** /eorder/admin/order/orderList.lime *********** */



/* *********** /eorder/admin/order/getOrderHeaderListAjax.lime *********** */
;


/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\eorder\ctrl\admin\OrderCtrl.java *********** */
;

210    /**
     * OK.
     * 웹주문현황 폼 > 주문 헤더 리스트 가져오기 Ajax.
     * @작성일 : 2020. 4. 8.
     * @작성자 : kkyu
     */
    @ResponseBody
    @PostMapping(value="getOrderHeaderListAjax")
    public Object getOrderHeaderListAjax(@RequestParam Map<String, Object> params, HttpServletRequest req, HttpServletResponse res, LoginDto loginDto, Model model) throws Exception {
        params.put("where", "admin");

        // 내부사용자 웹주문현황  > 별도 권한 설정.
        orderSvc.setParamsForAdminOrderList(params, req, loginDto, model);
        
        return orderSvc.getOrderHeaderList(params, req, loginDto);






/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\eorder\svc\OrderSvc.java *********** */
;

232    /**
     * 주문 헤더 리스트 가져오기.
     * @작성일 : 2020. 4. 8.
     * @작성자 : kkyu
     * @param where : admin=관리자, excel=관리자 엑셀, front=거래처,납품처, frontexcel=거래처,납품처 엑셀.
     */
    public Map<String, Object> getOrderHeaderList(Map<String, Object> params, HttpServletRequest req, LoginDto loginDto) throws Exception {
        Map<String, Object> resMap = new HashMap<>();
        
        String where = Converter.toStr(params.get("where"));
        
        //String r_insdate = Converter.toStr(params.get("r_insdate")); // 주문일자 검색 시작일.
        //String r_inedate = Converter.toStr(params.get("r_insdate")); // 주문일자 검색 종료일.
        //String rl_reqno = Converter.toStr(params.get("rl_reqno")); // 주문번호 검색.
        //String r_csuserid = Converter.toStr(params.get("r_csuserid")); // 주문한 거래처의 담당 영업사원의 고정 CS코드 검색.
        //String r_custnm = Converter.toStr(params.get("r_custnm")); // 주문한 거래처명 검색. like 아님.
        //String r_shiptocd = Converter.toStr(params.get("r_shiptocd")); // 주문한 거래처의 납품처 코드 검색.
        //String rl_salesusernm = Converter.toStr(params.get("rl_salesusernm")); // 주문한 거래처의 담당 영업사원명 검색.
        String ri_statuscds = Converter.toStr(params.get("ri_statuscds")); // 상태값으로  ,로 구분.
        
        if(!StringUtils.equals("front", where)) {
            if(StringUtils.equals("", ri_statuscds)) {
                String[] removeStatusArr = {"99"}; //임시저장
                List<String> statusList = (StringUtils.equals("admin", where) || StringUtils.equals("excel", where)) ? StatusUtil.ORDER.getKeyList(removeStatusArr) : StatusUtil.ORDER.getKeyList(); // 관리자는 임시저장 상태 제외한 리스트.
                logger.debug("statusList : {}", statusList);
                params.put("ri_statuscd", statusList);
            }
            else {
                params.put("ri_statuscd", ri_statuscds.split(",", -1));
            }
        }else {
            String[] ri_statuscd = req.getParameterValues("ri_statuscd");
            params.put("ri_statuscd", ri_statuscd);
        }

        int totalCnt = custOrderHDao.cnt(params);

        Pager pager = new Pager();
        pager.gridSetInfo(totalCnt, params, req);
        resMap.put("total", Converter.toInt(params.get("totpage")));
        resMap.put("listTotalCount", totalCnt);
        
        // Start. Define Only For Form-Paging.
        resMap.put("startnumber", params.get("startnumber"));
        resMap.put("r_page", params.get("r_page"));
        resMap.put("startpage", params.get("startpage"));
        resMap.put("endpage", params.get("endpage"));
        resMap.put("r_limitrow", params.get("r_limitrow"));
        // End.
        
        String r_orderby = "";
        String sidx = Converter.toStr(params.get("sidx")); //정렬기준컬럼
        String sord = Converter.toStr(params.get("sord")); //내림차순,오름차순
        if(StringUtils.equals("USERID", sidx)) sidx = "COH."+sidx; //alias 명시.
        if(StringUtils.equals("CUST_CD", sidx)) sidx = "COH."+sidx;
        if(StringUtils.equals("SHIPTO_CD", sidx)) sidx = "COH."+sidx;
        r_orderby = sidx + " " + sord;
        // 2024-10-16 hsg 별칭 오류가 나서 수정. COH -> XX)
        if(StringUtils.equals("", sidx)) { r_orderby = "XX.INDATE DESC "; } //디폴트 지정
        
        params.put("r_orderby", r_orderby);

        // 엑셀 다운로드.
        if(StringUtils.equals("excel", where) || StringUtils.equals("frontexcel", where) || StringUtils.equals("orderadd", where)) {
            params.remove("r_startrow");
            params.remove("r_endrow");
        }
        
        List<Map<String, Object>> list = this.getCustOrderHList(params);
        resMap.put("list", list);
        resMap.put("data", list);
        resMap.put("page", params.get("r_page"));
        
        resMap.put("where", where);
        
        return resMap;
    }




/* ***************************************************************************************************************************************** */
/* *********** int totalCnt = custOrderHDao.cnt(params); *********** */




/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\eorder\dao\CustOrderHDao.java *********** */
;

35	public int cnt(Map<String, Object> svcMap) {
		return sqlSession.selectOne("eorder.o_cust_order_h.cnt", svcMap);
	}
	public int cnt(Map<String, Object> svcMap) {
		return sqlSession.selectOne("eorder.o_cust_order_h.cnt", svcMap);
	}




/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\resources\sql\mssql\o_cust_order_h.xml *********** */
;

183	<select id="cnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) 
		FROM O_CUST_ORDER_H COH
			LEFT JOIN O_CUSTOMER CU ON COH.CUST_CD = CU.CUST_CD
			LEFT JOIN O_SHIPTO ST ON COH.SHIPTO_CD = ST.SHIPTO_CD
			LEFT JOIN O_USER US_SALES ON CU.SALESREP_CD = US_SALES.USERID
			<!-- 2025-01-13 HSG Double Suplex. O_SALESORDER 테이블에서 담당자(SALESREP_NM) 값을 구하기 위해 O_SALESORDER 테이블과 LEFT OUTER JOIN 함 -->
			LEFT JOIN O_SALESORDER OS ON COH.REQ_NO = OS.CUST_PO
		<where>
			<if test="r_userid != null and r_userid != '' ">AND RTRIM(COH.USERID) = RTRIM(#{r_userid})</if>
			<if test="r_reqno != null and r_reqno != '' ">AND COH.REQ_NO = #{r_reqno}</if>
			<if test="rl_reqno != null and rl_reqno != '' ">AND COH.REQ_NO LIKE '%' + #{rl_reqno} + '%'</if>
			<if test="r_custcd != null and r_custcd != '' ">AND COH.CUST_CD = #{r_custcd}</if>
			<if test="rl_custcd != null and rl_custcd != '' ">AND COH.CUST_CD LIKE '%' + #{rl_custcd} + '%'</if>
			<if test="r_custnm != null and r_custnm != '' ">AND CU.CUST_NM = #{r_custnm}</if>
			<if test="rl_custnm != null and rl_custnm != '' ">AND CU.CUST_NM LIKE '%' + #{rl_custnm} + '%'</if>
			<if test="r_shiptocd != null and r_shiptocd != '' ">AND COH.SHIPTO_CD = #{r_shiptocd}</if>
			<if test="rl_salesusernm != null and rl_salesusernm != '' ">AND US_SALES.USER_NM LIKE '%' + #{rl_salesusernm} + '%'</if>
			<if test="rl_receiver != null and rl_receiver != '' ">AND COH.RECEIVER LIKE '%' + #{rl_receiver} + '%'</if>
			<if test="r_csuserid != null and r_csuserid != '' ">
				AND US_SALES.USERID IN (SELECT SALESUSERID FROM O_CSSALESMAP WHERE CSUSERID = #{r_csuserid})
			</if>
			<if test="r_insdate != null and r_insdate != '' ">AND COH.INDATE <![CDATA[>=]]> CONVERT(DATE, #{r_insdate})</if>
				<!-- 2024-10-18 HSG 조회조건 변경 : 종료일 이전이 아니라 종료일 다음날 이전으로 변경 -->
				<if test="r_inedate != null and r_inedate != '' ">AND COH.INDATE <![CDATA[<]]> DATEADD(day, 1,CONVERT(DATE, #{r_inedate}))</if>
			<!-- <if test="r_inedate != null and r_inedate != '' ">AND COH.INDATE <![CDATA[<=]]> CONVERT(DATE, #{r_inedate})</if> -->
			<if test="r_statuscd != null and r_statuscd != '' ">AND COH.STATUS_CD = #{r_statuscd}</if>
			<if test="ri_statuscd != null">
   				AND COH.STATUS_CD IN <foreach collection="ri_statuscd" item="status_cd" separator="," open="(" close=")">#{status_cd}</foreach>
 			</if>
 			
 			<!-- 관리자 권한에 따른 조건절 -->
 			<if test="r_adminauthority != null and r_adminauthority != '' ">
 				<if test='"AD".equals(r_adminauthority)'>
 				</if>
 				<if test='"CS".equals(r_adminauthority)'>
 					AND CU.SALESREP_CD IN (SELECT SALESUSERID FROM O_CSSALESMAP WHERE CSUSERID = #{r_adminuserid})
 				</if>
 				<if test='"SH".equals(r_adminauthority) or "SM".equals(r_adminauthority) or "SR".equals(r_adminauthority)'>
 					<if test='"SH".equals(r_adminauthority)'>
 						AND CU.SALESREP_CD IN (SELECT USERID FROM O_USER WHERE USER_CATE2 = #{r_adminuserid})
 					</if>
 					<if test='"SM".equals(r_adminauthority)'>
 						AND CU.SALESREP_CD IN (SELECT USERID FROM O_USER WHERE USER_CATE3 = #{r_adminuserid})
 					</if>
 					<if test='"SR".equals(r_adminauthority)'>
 						AND CU.SALESREP_CD = #{r_adminuserid}
 					</if>
 				</if>
 				<if test='"MK".equals(r_adminauthority)'>
 				</if>
 			</if>
 			<!-- End. -->
		</where>
	</select>




/* ***************************************************************************************************************************************** */
/* *********** 페이징 처리 : pager.gridSetInfo(totalCnt, params, req); *********** */


/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\common\util\Pager.java *********** */
;

11	/**
	 * 그리드 페이징 & 폼 페이징
	 * page:페이지, rows:레코드수
	 */
	public void gridSetInfo(int totalCnt, Map<String, Object> params, HttpServletRequest req) {
		Device device = DeviceUtils.getCurrentDevice(req);
		
		int r_page = Converter.toInt(params.get("page"), 1); // 페이지
		int r_limitrow = Converter.toInt(params.get("rows"), 10); // 한페이지에 보여줄 레코드수
		
		if (r_page == 0) r_page = 1;
		if (r_limitrow == 0) r_limitrow = 10;
		
		if (r_limitrow > 0) {
			int totalPage = ( totalCnt % r_limitrow == 0 ) ? totalCnt / r_limitrow : totalCnt / r_limitrow + 1; // 전체페이지 수 
			if (r_page > totalPage) r_page = 1;

			int r_endrow = r_page * r_limitrow; // 끝지점
			int r_startrow = r_endrow - r_limitrow + 1; // 시작지점
			
			// 파라미터 설정 For Form & Grid.  
			params.put("r_startrow", r_startrow);
			params.put("r_endrow", r_endrow);
			params.put("totpage", totalPage);
			
			// 파라미터 설정 For Only Form. 
			int startnumber = totalCnt - ( r_limitrow * ( r_page - 1 ) ); // 일련번호 설정
			int viewpageea = (device.isMobile() || device.isTablet()) ? 5 : 10; // 페이징처리시 보여지는 페이지수 > 접속기기가 모바일(태블릿)=5, PC=10.
			//int viewpageea = Converter.toInt(params.get("r_viewpageea"), 10);
			int startpage = r_page - (r_page - 1) % viewpageea; // 페이징처리시 처음 보여지는 페이지수
			int endpage = startpage + viewpageea - 1; // 페이징처리시 마지막에 보여지는 페이지수
			if(totalPage < endpage) endpage = totalPage;
			params.put("startnumber", startnumber);
			params.put("r_page", r_page);
			params.put("startpage", startpage);
			params.put("endpage", endpage);
			params.put("r_limitrow", r_limitrow);
			params.put("limitrow"+r_limitrow, "selected='selected'");
			
		}
		else { // r_limitrow = -1 로 설정하여 페이징 안타게 처리.
			params.put("r_startrow", "");
			params.put("r_endrow", "");			
		}
	}




/* ***************************************************************************************************************************************** */
/* *********** List<Map<String, Object>> list = this.getCustOrderHList(params); *********** */



/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\eorder\svc\OrderSvc.java *********** */
;


120    /**
     * Get O_CUST_ORDER_H List.
     * @작성일 : 2020. 4. 8.
     * @작성자 : kkyu
     */
    public List<Map<String, Object>> getCustOrderHList(Map<String, Object> svcMap){
        return custOrderHDao.list(svcMap);
    }



/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\java\com\limenets\eorder\dao\CustOrderHDao.java *********** */
;

39	public List<Map<String, Object>> list(Map<String, Object> svcMap) {
		return sqlSession.selectList("eorder.o_cust_order_h.list", svcMap);
	}



/* *********** C:\GitHub\Knauf_Eorder_NEW\src\main\resources\sql\mssql\o_cust_order_h.xml *********** */
;

245	<select id="list" parameterType="hashmap" resultType="hashmap">
		SELECT * FROM (SELECT 
			ROW_NUMBER() OVER(
			<choose>
				<when test = " r_orderby != null and r_orderby != '' ">ORDER BY ${r_orderby}</when>
				<otherwise>ORDER BY (SELECT 1)</otherwise>
			</choose>
			) AS ROWNUM
			, XX.* FROM (
			SELECT COH.*
				, (SELECT USER_NM FROM O_USER WHERE RTRIM(USERID) = RTRIM(COH.USERID)) AS USER_NM
				, CU.CUST_NM
				, ST.SHIPTO_NM
				<!-- 2015-01-17 hsg Fisherman Suplex. 거래처 담당자가 주기적으로 바뀌기에 당시에 있었던 오더들에 대해서는 담당자가 저장 되어야 합니다.라는 요청에 의해 거래처 담당자를 함께 조회한다. , US_SALES.USERID AS SALESUSERID, US_SALES.USER_NM AS SALESUSER_NM -->
				<!-- , CU.SALESREP_CD AS SALESUSERID, CU.SALESREP_NM AS SALESUSER_NM -->
				<!-- 2025-01-22 hsg Three-Quarter Facelock. 주문확정 때의 영업담당자를 가져오도럭 수정. 시작. , US_SALES.USERID AS SALESUSERID, US_SALES.USER_NM AS SALESUSER_NM -->
				, CASE
					WHEN ( SELECT salesrep_cd FROM o_order_confirm_h oc WHERE COH.REQ_NO = oc.REQ_NO) IS NULL THEN CU.salesrep_cd
					ELSE ( SELECT salesrep_cd FROM o_order_confirm_h oc WHERE COH.REQ_NO = oc.REQ_NO)
				  END AS SALESUSERID
				, CASE
					WHEN ( SELECT salesrep_nm FROM o_order_confirm_h oc WHERE COH.REQ_NO = oc.REQ_NO) IS NULL THEN CU.salesrep_nm
					ELSE ( SELECT salesrep_nm FROM o_order_confirm_h oc WHERE COH.REQ_NO = oc.REQ_NO)
				  END AS SALESUSER_NM
				<!-- 2025-01-22 hsg Three-Quarter Facelock. 주문확정 때의 영업담당자를 가져오도럭 수정. 끝. -->
				, (SELECT CSUSERID FROM O_CSSALESMAP WHERE SALESUSERID = US_SALES.USERID AND FIXEDYN = 'Y') AS CSUSERID
				, (SELECT SUB1.USER_NM FROM O_USER SUB1, O_CSSALESMAP SUB2 WHERE SUB1.USERID = SUB2.CSUSERID AND SUB2.SALESUSERID = US_SALES.USERID AND SUB2.FIXEDYN = 'Y') AS CSUSER_NM
				, (SELECT COUNT(*) FROM O_CUST_ORDER_D WHERE REQ_NO = COH.REQ_NO) AS ITEM_CNT
				, (SELECT TOP 1 CONFIRM_DT FROM O_ORDER_CONFIRM_H WHERE REQ_NO = COH.REQ_NO) AS CONFIRM_DT2
				, QM.QMS_TEMP_ID
			FROM O_CUST_ORDER_H COH
				LEFT OUTER JOIN QMS_PRE_MAST QM ON QM.REQ_NO = COH.REQ_NO AND QM.DELETEYN = 'N'
				LEFT JOIN O_CUSTOMER CU ON COH.CUST_CD = CU.CUST_CD
				LEFT JOIN O_SHIPTO ST ON COH.SHIPTO_CD = ST.SHIPTO_CD
				LEFT JOIN O_USER US_SALES ON CU.SALESREP_CD = US_SALES.USERID
				<!-- 2025-01-13 HSG Double Suplex. O_SALESORDER 테이블에서 담당자(SALESREP_NM) 값을 구하기 위해 O_SALESORDER 테이블과 LEFT OUTER JOIN 함 -->
				LEFT JOIN O_SALESORDER OS ON COH.REQ_NO = OS.CUST_PO
			<where>
				<if test="r_userid != null and r_userid != '' ">AND RTRIM(COH.USERID) = RTRIM(#{r_userid})</if>
				<if test="r_reqno != null and r_reqno != '' ">AND COH.REQ_NO = #{r_reqno}</if>
				<if test="rl_reqno != null and rl_reqno != '' ">AND COH.REQ_NO LIKE '%' + #{rl_reqno} + '%'</if>
				<if test="r_custcd != null and r_custcd != '' ">AND COH.CUST_CD = #{r_custcd}</if>
				<if test="rl_custcd != null and rl_custcd != '' ">AND COH.CUST_CD LIKE '%' + #{rl_custcd} + '%'</if>
				<if test="r_custnm != null and r_custnm != '' ">AND CU.CUST_NM = #{r_custnm}</if>
				<if test="rl_custnm != null and rl_custnm != '' ">AND CU.CUST_NM LIKE '%' + #{rl_custnm} + '%'</if>
				<if test="r_shiptocd != null and r_shiptocd != '' ">AND COH.SHIPTO_CD = #{r_shiptocd}</if>
				<if test="rl_salesusernm != null and rl_salesusernm != '' ">AND US_SALES.USER_NM LIKE '%' + #{rl_salesusernm} + '%'</if>
				<if test="rl_receiver != null and rl_receiver != '' ">AND COH.RECEIVER LIKE '%' + #{rl_receiver} + '%'</if>
				<if test="r_csuserid != null and r_csuserid != '' ">
					AND US_SALES.USERID IN (SELECT SALESUSERID FROM O_CSSALESMAP WHERE CSUSERID = #{r_csuserid})
				</if>
				<if test="r_insdate != null and r_insdate != '' ">AND COH.INDATE <![CDATA[>=]]> CONVERT(DATE, #{r_insdate})</if>
				<!-- 2024-10-18 HSG 조회조건 변경 : 종료일 이전이 아니라 종료일 다음날 이전으로 변경 -->
				<if test="r_inedate != null and r_inedate != '' ">AND COH.INDATE <![CDATA[<]]> DATEADD(day, 1,CONVERT(DATE, #{r_inedate}))</if>
				<if test="r_statuscd != null and r_statuscd != '' ">AND COH.STATUS_CD = #{r_statuscd}</if>
				<if test="ri_statuscd != null">
	   				AND COH.STATUS_CD IN <foreach collection="ri_statuscd" item="status_cd" separator="," open="(" close=")">#{status_cd}</foreach>
	 			</if>
				<if test="ri_reqno != null">
	   				AND COH.REQ_NO IN <foreach collection="ri_reqno" item="req_no" separator="," open="(" close=")">#{req_no}</foreach>
	 			</if>
	 			
	 			<!-- 관리자 권한에 따른 조건절 -->
	 			<if test="r_adminauthority != null and r_adminauthority != '' ">
	 				<if test='"AD".equals(r_adminauthority)'>
	 				</if>
	 				<if test='"CS".equals(r_adminauthority)'>
	 					AND CU.SALESREP_CD IN (SELECT SALESUSERID FROM O_CSSALESMAP WHERE CSUSERID = #{r_adminuserid})
	 				</if>
	 				<if test='"SH".equals(r_adminauthority) or "SM".equals(r_adminauthority) or "SR".equals(r_adminauthority)'>
	 					<if test='"SH".equals(r_adminauthority)'>
	 						AND CU.SALESREP_CD IN (SELECT USERID FROM O_USER WHERE USER_CATE2 = #{r_adminuserid})
	 					</if>
	 					<if test='"SM".equals(r_adminauthority)'>
	 						AND CU.SALESREP_CD IN (SELECT USERID FROM O_USER WHERE USER_CATE3 = #{r_adminuserid})
	 					</if>
	 					<if test='"SR".equals(r_adminauthority)'>
	 						AND CU.SALESREP_CD = #{r_adminuserid}
	 					</if>
	 				</if>
	 				<if test='"MK".equals(r_adminauthority)'>
	 				</if>
	 			</if>
	 			<!-- End. -->
			</where>
			) XX 
		) S
		<where>
			<if test="r_endrow != null and r_endrow != '' and r_startrow != null and r_startrow != ''" >	
				ROWNUM BETWEEN #{r_startrow} AND #{r_endrow}
			</if>
		</where>
	</select>
